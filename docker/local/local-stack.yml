

networks:
  vps_network:
    external: true

volumes:
  zstart_pgdata:
    driver: local
  zero_replica:
    driver: local
  app_opt:
    driver: local

services:
  frontend:
    container_name: frontend
    build:
      context: ../../
      dockerfile: docker/local/Dockerfile

    volumes:
      - ../../src:/opt/app/src
    env_file:
      - ./.env
    networks:
      - vps_network
    ports:
      - published: 3000
        target: 3000

  postgres:
    container_name: postgres
    image: postgres:16.2-alpine
    user: postgres
    ports:
      - published: 5430
        target: 5432
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: >
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=5
      -c hot_standby=on
      -c hot_standby_feedback=on
    volumes:
      - type: volume
        source: zstart_pgdata
        target: /var/lib/postgresql/data
      - type: bind
        source: ../seed.sql
        target: /docker-entrypoint-initdb.d/seed.sql 
    networks:
      - vps_network


  zero:
    image: rocicorp/zero:0.12.2025013100
    container_name: zero
    depends_on:
      - postgres
    env_file:
      - ./.env
    environment:
      ZERO_UPSTREAM_DB: ${ZERO_UPSTREAM_DB}
      ZERO_CVR_DB:     ${ZERO_CVR_DB}
      ZERO_CHANGE_DB:  ${ZERO_CHANGE_DB}
      ZERO_REPLICA_FILE: /tmp/zstart_replica.db
    ports:
      - published: 4848
        target: 4848
    volumes:
      - type: volume
        source: zero_replica
        target: /tmp
      - type: bind
        source: ../../zero-schema.json
        target: /opt/app/zero-schema.json
    networks:
      - vps_network


  clerk_webhook:
    container_name: clerk_webhook
    image: ghcr.io/baranuel/clerk-casefiles:latest
    env_file:
      - ./.env
    ports:
      - published: 1111
        target: 1111
    networks:
      - vps_network
