version: "3.8"

networks:
  vps_network:
    external: true

volumes:
  zstart_pgdata:
    driver: local
  zero_replica:
    driver: local

configs:
  seed_sql:
    file: ../seed.sql
  zero_schema:
    file: ../../zero-schema.json

services:
  frontend:
    image: ghcr.io/baranuel/casefiles:${GIT_COMMIT_HASH:-latest}
    env_file:
      - ./.env
    networks:
      - vps_network

  postgres:
    image: postgres:16.2-alpine
    user: postgres
    healthcheck:
      test: ["CMD‑SHELL", "pg_isready -U ${POSTGRES_USER} --dbname=postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - published: 5430
        target: 5432
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: >
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=5
      -c hot_standby=on
      -c hot_standby_feedback=on
    volumes:
      # named volume for PG data
      - type: volume
        source: zstart_pgdata
        target: /var/lib/postgresql/data

    configs:                        # <<–– mount the config here
      - source: seed_sql
        target: /docker-entrypoint-initdb.d/seed.sql 
    networks:
      - vps_network

  zero:
    image: rocicorp/zero:0.12.2025013100
    depends_on:
      - postgres
    env_file:
      - ./.env
    environment:
      ZERO_UPSTREAM_DB: ${ZERO_UPSTREAM_DB}
      ZERO_CVR_DB:     ${ZERO_CVR_DB}
      ZERO_CHANGE_DB:  ${ZERO_CHANGE_DB}
      ZERO_REPLICA_FILE: /tmp/zstart_replica.db
      ZERO_SCHEMA_FILE:  ./zero-schema.json
    ports:
      - published: 4848
        target: 4848
    volumes:
      - type: volume
        source: zero_replica
        target: /tmp/zstart_replica.db

    configs:
      - source: zero_schema
        target: /opt/app/zero-schema.json
        
    networks:
      - vps_network
    deploy:
      replicas: 1
