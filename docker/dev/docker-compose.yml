services:

  frontend:
    image: ghcr.io/baranuel/casefiles:${GIT_COMMIT_HASH:-latest}
    env_file:
      - ./.env
    networks:
      - vps_network

  postgres:
    image: postgres:16.2-alpine
    user: postgres
    healthcheck:
      test: 'pg_isready -U ${POSTGRES_USER} --dbname=postgres'
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5430:5432
    env_file:
      - ./.env
    environment:  
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: |
      postgres 
      -c wal_level=logical
      -c max_wal_senders=10 
      -c max_replication_slots=5 
      -c hot_standby=on 
      -c hot_standby_feedback=on
    volumes:
      - type: volume
        source: zstart_pgdata
        target: /var/lib/postgresql/data
      - type: bind
        source: ${GITHUB_WORKSPACE:-..}/docker/seed.sql
        target: /docker-entrypoint-initdb.d/seed.sql
    networks:
      - vps_network

  zero:
    depends_on:
      - postgres
    image: rocicorp/zero:0.12.2025013100
    env_file:
      - ./.env
    volumes:
      - type: bind
        source: ${GITHUB_WORKSPACE:-../..}/zero-schema.json
        target: /opt/app/zero-schema.json
    environment:
      - ZERO_UPSTREAM_DB=${ZERO_UPSTREAM_DB}
      - ZERO_CVR_DB=${ZERO_CVR_DB}
      - ZERO_CHANGE_DB=${ZERO_CHANGE_DB}
      - ZERO_REPLICA_FILE=/tmp/zstart_replica.db
      - ZERO_SCHEMA_FILE=./zero-schema.json
    ports:
      - 4848:4848
    networks:
      - vps_network

volumes:
  zstart_pgdata:
    driver: local
  zero_replica:
    driver: local

networks:
  vps_network:
    external: true