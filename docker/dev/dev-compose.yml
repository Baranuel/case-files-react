
volumes:
  data:
    driver: local

networks:
  vps:
    external: true

services:
  postgres:
    build:
      context: .
      dockerfile: db.Dockerfile
    shm_size: 1g
    user: postgres
    restart: always
    healthcheck:
      test: 'pg_isready -U user --dbname=postgres'
      interval: 10s
      timeout: 5s
      retries: 5

    environment:
      POSTGRES_USER: user
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
    command: |
      postgres 
      -c wal_level=logical
      -c max_wal_senders=10 
      -c max_replication_slots=5 
      -c hot_standby=on 
      -c hot_standby_feedback=on
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - vps

  zero:
    image: rocicorp/zero:0.12.2025013100
    depends_on:
      - postgres
      
    env_file:
      - ./.env
    environment:
      ZERO_UPSTREAM_DB: "postgresql://casefiles:a8f5f167f44f4964e6c998dee827110c@postgres:5432/zstart"
      ZERO_CVR_DB:     "postgresql://casefiles:a8f5f167f44f4964e6c998dee827110c@postgres:5432/zstart_cvr"
      ZERO_CHANGE_DB:  "postgresql://casefiles:a8f5f167f44f4964e6c998dee827110c@postgres:5432/zstart_cdb"
      ZERO_REPLICA_FILE: /tmp/zstart_replica.db
      ZERO_SCHEMA_FILE:  ./zero-schema.json
    ports:
      - published: 4848
        target: 4848
    volumes:
      - zero_replica:/tmp
      - ../../zero-schema.json:/opt/app/zero-schema.json
    networks:
      - vps


